1.C++中的对象可相当于C里面的结构体的扩展,C++中的类成员还可以是函数,这样使其和成员变量形成整体；
2.C++中类就相当于用户自定义的复杂数据结构;
3.命名空间: 简单理解可为解决变量或者函数命名冲突的问题,如指定命名空间,那么当遇到未命名的参数或者函数时,
		    会默认选择命名空间里的东西;
4."::"称为域解析操作符,用于指明要使用的命名空间
5.C++中建议使用new和delete来申请和释放内存;
6.时间结构: 类型 clock_t、size_t 和 time_t 能够把系统时间和日期表示为某种整数, 结构类型 tm 把日期和时间以 C 结构的形式保存
7.C++类:
           ----关键字
		   ^      
		class classname <------------类名 
		
		{
			
				Access specifies:         <--------//访问修饰符:private/public/protected
						
						Date members/variables;               //变量
						
						Member functions() {}                 //方法
						
		};     <---------------------------------------      //分号结束一个类


|	     概念	    |                                        描述
-------------------------------------------------------------------------------------------------------------------------------------
|    类成员函数	    |	类的成员函数是指那些把定义和原型写在类定义内部的函数，就像类定义中的其他变量一样。                              |
-------------------------------------------------------------------------------------------------------------------------------------
|    类访问修饰符	|	类成员可以被定义为 public、private 或 protected。默认情况下是定义为 private。                                 |
-------------------------------------------------------------------------------------------------------------------------------------
|构造函数 & 析构函数	|	类的构造函数是一种特殊的函数，在创建一个新的对象时调用。类的析构函数也是一种特殊的函数，在删除所创建的对象时调用  |
-------------------------------------------------------------------------------------------------------------------------------------
|  C++ 拷贝构造函数	|	拷贝构造函数，是一种特殊的构造函数，它在创建对象时，是使用同一类中之前创建的对象来初始化新创建的对象。           |
-------------------------------------------------------------------------------------------------------------------------------------
|   C++ 友元函数	    |	友元函数可以访问类的 private 和 protected 成员。                                                              |
--------------------------------------------------------------------------------------------------------------------------------------
|   C++ 内联函数	    |	通过内联函数，编译器试图在调用函数的地方扩展函数体中的代码。                                                   |
--------------------------------------------------------------------------------------------------------------------------------------
| C++ 中的 this 指针	|	每个对象都有一个特殊的指针 this，它指向对象本身。                                                              |
--------------------------------------------------------------------------------------------------------------------------------------
| C++ 中指向类的指针	|	指向类的指针方式如同指向结构的指针。实际上，类可以看成是一个带有函数的结构。                                     |
--------------------------------------------------------------------------------------------------------------------------------------
|  C++ 类的静态成员	|	类的数据成员和函数成员都可以被声明为静态的。                                                                   |
--------------------------------------------------------------------------------------------------------------------------------------
8.C++类中,与类同名的函数为构造函数, ~类名的时析构函数
9.C++派生类: class derived-class: access-specifier base-class
			 a.未使用访问修饰符,则默认为private
			 b.派生类继承了基类所有方法,但下列除外---->基类的构造函数、析构函数和拷贝构造函数,基类的重载运算符,基类的友元函数
			 c.一般使用public继承,此时派生类的公有和保护和基类一样,但是派生类无法直接访问基类的私有



