#ifndef _DRAW_PROCESSBAR_H
#define _DRAW_PROCESSBAR_H


#include <linux/delay.h>
#include <linux/init.h>
#include <linux/compiler.h>
#include <asm/cacheflush.h>
#include <linux/slab.h>
#include <linux/workqueue.h>
#include <asm/uaccess.h>
#include <linux/fb.h>

typedef struct
{
	int          screen_width;
	int          screen_height;
	int          screen_size;
	unsigned int color;
	char         *screen_buf;
}screen_info;

typedef struct 
{
	int  x1;					//左上角x坐标
	int  y1;					//左上角y坐标
	int  x2;					//右下角x坐标
	int  y2;					//右下角y坐标
	int  st_x;					//内部起始点的x坐标
	int  st_y;					//内部起始点的y坐标
	int  pr_x;					//当前进度所在的x坐标
	int  pr_y;					//无效
	int  thick;					//框的厚度，边缘厚度
	int  width;					//整体宽度
	int  height;				//整体高度
	int  frame_color;			//边框颜色
	int  progress_color;		//内部颜色
	int  progress_ratio;		//当前进度百分比
	/*0:left to right*/
	/*1:right to left*/
	/*2:up to down*/
	/*3:down to up*/
	int direction_option;
	
	void *kmalloc_addr;
}processbar_t;

char alpha[432][2] = {
	
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xC0,0x30,0x60,
	0x00,0x60,0x1F,0xE0,0x30,0x60,0x30,0xE0,0x1F,0x60,0x00,0x00,0x00,0x00,0x00,0x00,/*"a",0*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x37,0x80,0x38,0xC0,
	0x30,0x60,0x30,0x60,0x30,0x60,0x38,0xC0,0x37,0x80,0x00,0x00,0x00,0x00,0x00,0x00,/*"b",1*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xC0,0x30,0x60,
	0x60,0x00,0x60,0x00,0x60,0x00,0x20,0x60,0x1F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,/*"c",2*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0xC0,0x00,0xC0,0x1E,0xC0,0x31,0xC0,
	0x60,0xC0,0x60,0xC0,0x60,0xC0,0x31,0xC0,0x1E,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"d",3*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x80,0x30,0xC0,
	0x60,0x60,0x7F,0xE0,0x60,0x00,0x30,0x60,0x1F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,/*"e",4*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xE0,0x06,0x00,0x06,0x00,0x3F,0xC0,0x06,0x00,
	0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"f",5*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0xC0,0x31,0xC0,
	0x60,0xC0,0x60,0xC0,0x60,0xC0,0x31,0xC0,0x1E,0xC0,0x00,0xC0,0x61,0x80,0x3F,0x00,/*"g",6*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x37,0x80,0x38,0xC0,
	0x30,0xC0,0x30,0xC0,0x30,0xC0,0x30,0xC0,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"h",7*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x03,0x00,
	0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"i",8*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x03,0x00,
	0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x03,0x00,0x3E,0x00,/*"j",9*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0xC0,0x33,0x80,
	0x36,0x00,0x3E,0x00,0x3B,0x00,0x31,0x80,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"k",10*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,
	0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"l",11*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6E,0xC0,0x77,0x60,
	0x66,0x60,0x66,0x60,0x66,0x60,0x66,0x60,0x66,0x60,0x00,0x00,0x00,0x00,0x00,0x00,/*"m",12*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0x80,0x38,0xC0,
	0x30,0xC0,0x30,0xC0,0x30,0xC0,0x30,0xC0,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"n",13*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x80,0x30,0xC0,
	0x60,0x60,0x60,0x60,0x60,0x60,0x30,0xC0,0x1F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,/*"o",14*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x37,0x80,0x38,0xC0,
	0x30,0x60,0x30,0x60,0x30,0x60,0x38,0xC0,0x37,0x80,0x30,0x00,0x30,0x00,0x30,0x00,/*"p",15*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0xC0,0x31,0xC0,
	0x60,0xC0,0x60,0xC0,0x60,0xC0,0x31,0xC0,0x1E,0xC0,0x00,0xC0,0x00,0xC0,0x00,0xC0,/*"q",16*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0xC0,0x1C,0x40,
	0x18,0x00,0x18,0x00,0x18,0x00,0x18,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"r",17*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x80,0x30,0xC0,
	0x33,0x80,0x3F,0xC0,0x00,0xC0,0x30,0xC0,0x1F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,/*"s",18*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x0C,0x00,0x0C,0x00,0x7F,0xC0,0x0C,0x00,
	0x0C,0x00,0x0C,0x00,0x0C,0x00,0x0C,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"t",19*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0xC0,0x30,0xC0,
	0x30,0xC0,0x30,0xC0,0x30,0xC0,0x31,0xC0,0x1E,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,/*"u",20*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0xC0,0x31,0x80,
	0x31,0x80,0x1B,0x00,0x1B,0x00,0x0E,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"v",21*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC4,0x60,0xCE,0x60,
	0x6A,0xC0,0x6A,0xC0,0x2A,0x80,0x32,0x80,0x11,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"w",22*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0xE0,0x19,0x80,
	0x0F,0x00,0x06,0x00,0x0F,0x00,0x19,0x80,0x70,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,/*"x",23*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0xC0,0x31,0x80,
	0x31,0x80,0x1B,0x00,0x1B,0x00,0x0E,0x00,0x0E,0x00,0x0C,0x00,0x0C,0x00,0x38,0x00,/*"y",24*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xE0,0x01,0xC0,
	0x03,0x80,0x07,0x00,0x1C,0x00,0x38,0x00,0x7F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,/*"z",25*/

	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*".",26*/
                                                                   
};

/** 屏幕参数定义 */
#define SCREEN_LCD_WIDTH             480
#define SCREEN_LCD_HEIGHT            272
#define KERNEL_FRAME_BUFFER_ADDR     0xC6400000
#define NORMAL_START_DELAY           8
#define UPDATE_START_DELAY_BOOT      10
#define UPDATE_START_DELAY_RECOVERY  12
#define PROGRESSBAR_START_X_TIMES    16
#define PROGRESSBAR_START_Y_TIMES    48
#define PROGRESSBAR_END_Y_TIMES      56
#define PROGRESSBAR_EVERY_STEP       2
#define PROGRESSBAR_UBOOT_LEN        0
#define PROGRESSBAR_COMPLETE_RATE    100


/** 颜色定义 */
#define RIGOL_COLOR_GREEN         0xff00FF00
#define RIGOL_COLOR_RED           0xffFF0000
#define RIGOL_COLOR_BLUE		  0xff0000ff
#define RIGOL_COLOR_CYAN          0xff00FFFF
#define RIGOL_COLOR_MAGENTA       0xffFF00FF
#define RIGOL_COLOR_YELLOW        0xffFFFF00
#define RIGOL_COLOR_LIGHTBLUE     0xff8080FF
#define RIGOL_COLOR_LIGHTGREEN    0xff80FF80
#define RIGOL_COLOR_LIGHTRED      0xffFF8080
#define RIGOL_COLOR_LIGHTCYAN     0xff80FFFF
#define RIGOL_COLOR_LIGHTMAGENTA  0xffFF80FF
#define RIGOL_COLOR_LIGHTYELLOW   0xffFFFF80
#define RIGOL_COLOR_DARKBLUE      0xff000080
#define RIGOL_COLOR_DARKGREEN     0xff008000
#define RIGOL_COLOR_DARKRED       0xff800000
#define RIGOL_COLOR_DARKCYAN      0xff008080
#define RIGOL_COLOR_DARKMAGENTA   0xff800080
#define RIGOL_COLOR_DARKYELLOW    0xff808000
#define RIGOL_COLOR_WHITE         0xffFFFFFF
#define RIGOL_COLOR_LIGHTGRAY     0xffD3D3D3
#define RIGOL_COLOR_GRAY          0xff808080
#define RIGOL_COLOR_DARKGRAY      0xff404040
#define RIGOL_COLOR_BLACK         0xff000000

/** 字符相关定义 */
#define CHAR_MASK                 0x80
#define CHAR_HEIGHT               16
#define CHAR_WIDTH                16
#define CHAR_BIT                  8
#define CHAR_POINT                '.'
#define CHAR_POINT_POS            (26 * 16)
#define CHAR_POS(string)          (string - 'a')


static void ui_set_color(unsigned int color);
static int ui_get_color(void);
static int draw_hollowrectangle(screen_info *screen_stu, int x1, int y1, int x2, int y2);
static int draw_solidrectangle(screen_info *screen_stu, int x1, int y1, int x2, int y2);
static int progressbar_create(processbar_t *progressbar_stu, int x1, int y1, int x2, int y2, int op);
static int progressbar_config(processbar_t *progressbar_stu, int frame_color, int progress_color, int thickness);
static int progressbar_active(screen_info *screen_stu, processbar_t *progressbar_stu);
static int progressbar_upgrate(screen_info *screen_stu, processbar_t *progressbar_stu, int rate);
static int screen_set(screen_info *screen_info_stu, char *framebuffer);
static void progressbar_run(struct work_struct *work);
static int progressbar_init(void);
static void progressbar_exit(void);
static int draw_char(unsigned int *framebuffer, int pos);
static int draw_string(unsigned int *framebuffer, char *string);

#endif
